<api name="Abstract GPU" headerFile="agpu.h" constantPrefix="AGPU_" typePrefix="agpu_" functionPrefix="agpu" >
<version name="1.0">
    <types>
        <typedef name="byte" ctype="unsigned char" />
        <typedef name="sbyte" ctype="signed char" />
        <typedef name="short" ctype="signed short" />
        <typedef name="ushort" ctype="unsigned short" />
        <typedef name="int" ctype="signed int" />
        <typedef name="uint" ctype="unsigned int" />
        <typedef name="pointer" ctype="void*" />
        <typedef name="size" ctype="size_t" />
        <typedef name="enum" ctype="int" />
        <typedef name="bool" ctype="bool" />
        
        <typedef name="float" ctype="float" />
        <typedef name="double" ctype="double" />

        <typedef name="bitfield" ctype="unsigned int" />
                
        <typedef name="cstring" ctype="const char*" />
        <typedef name="string" ctype="const char*" />
        <typedef name="string_length" ctype="int" />
        
        <typedef name="cstring_buffer" ctype="char*" />
        <typedef name="string_buffer" ctype="char*" />
    </types>

	<structs>
        <struct name="device_open_info">
            <field name="display" type="pointer" />
            <field name="window" type="pointer" />
            <field name="surface" type="pointer" />
            <field name="red_size" type="int" />
            <field name="green_size" type="int" />
            <field name="blue_size" type="int" />
            <field name="alpha_size" type="int" />
            <field name="depth_size" type="int" />
            <field name="stencil_size" type="int" />
            <field name="doublebuffer" type="bool" />
            <field name="sample_buffers" type="bool" />
            <field name="samples" type="int" />
        </struct>

		<struct name="buffer_description">
			<field name="size" type="uint" />
			<field name="usage" type="buffer_usage_type" />
			<field name="binding" type="buffer_binding_type" />
			<field name="mapping_flags" type="bitfield" bits="buffer_mapping_flags" />
			<field name="stride" type="uint" />
		</struct>

		<struct name="draw_elements_command">
			<field name="count" type="uint" />
			<field name="instance_count" type="uint" />
			<field name="first_index" type="uint" />
			<field name="base_vertex" type="uint" />
			<field name="base_instance" type="uint" />
		</struct>
        
        <struct name="vertex_attrib_description">
            <field name="binding" type="uint" />
            <field name="type" type="field_type" />
            <field name="components" type="uint" />
            <field name="normalized" type="bool" />
            <field name="offset" type="size" />
        </struct>
	</structs>
    
    <constants>
        <enum name="boolean_values">
            <constant name="True" value="1" />
            <constant name="False" value="0" />
        </enum>
        
        <enum name="error">
            <constant name="Ok" value="0" />
            <constant name="Error" value="-1" />
            <constant name="NullPointer" value="-2" />
            <constant name="InvalidOperation" value="-3" />
            <constant name="InvalidParameter" value="-4" />
            <constant name="OutOfBounds" value="-5" />
            <constant name="Unsupported" value="-6" />
            <constant name="Unimplemented" value="-7" />
            <constant name="NotCurrentContext" value="-8" />
            <constant name="CompilationError" value="-9" />
            <constant name="LinkingError" value="-9" />
        </enum>
        
		<enum name="primitive_mode">
            <constant name="Points" value="0" />

            <constant name="Lines" value="1" />
            <constant name="LinesAdjacency" value="2" />
            <constant name="LineStrip" value="3" />
            <constant name="LineStripAdjacency" value="4" />
            <constant name="LineLoop" value="5" />

            <constant name="Triangles" value="6" />
            <constant name="TrianglesAdjacency" value="7" />
            <constant name="TriangleStrip" value="8" />
            <constant name="TriangleStripAdjacency" value="9" />
            <constant name="TriangleFan" value="10" />

            <constant name="Patches" value="11" />
		</enum>

        <enum name="stencil_operation">
            <constant name="Keep" value="0" />
            <constant name="Zero" value="1" />
            <constant name="Replace" value="2" />
            <constant name="Invert" value="3" />
            <constant name="Increase" value="4" />
            <constant name="IncreaseWrap" value="5" />
            <constant name="Decrease" value="6" />
            <constant name="DecreaseWrap" value="7" />
        </enum>
        
        <enum name="compare_function">
            <constant name="Always" value="0" />
            <constant name="Never" value="1" />
            <constant name="Less" value="2" />
            <constant name="LessEqual" value="3" />
            <constant name="Equal" value="4" />
            <constant name="NotEqual" value="5" />
            <constant name="Greater" value="6" />
            <constant name="GreaterEqual" value="7" />
        </enum>
        
        <enum name="texture_type">
            <constant name="TextureBuffer" value="0" />
            <constant name="Texture1D" value="1" />
            <constant name="Texture2D" value="2" />
            <constant name="TextureCube" value="3" />
            <constant name="Texture3D" value="4" />
            <constant name="TextureArray1D" value="5" />
            <constant name="TextureArray2D" value="6" />
            <constant name="TextureArrayCube" value="7" />
            <constant name="TextureArray3D" value="8" />
        </enum>

		<enum name="shader_type">
			<constant name="VertexShader" value="0" />
			<constant name="FragmentShader" value="1" />
			<constant name="GeometryShader" value="2" />
			<constant name="ComputeShader" value="3" />
			<constant name="TessellationControlShader" value="4" />
			<constant name="TessellationEvaluationShader" value="5" />
		</enum>

		<enum name="buffer_usage_type">
			<constant name="Static" value="0" />
			<constant name="Dynamic" value="1" />
			<constant name="Stream" value="2" />
		</enum>

		<enum name="buffer_binding_type">
			<constant name="ArrayBuffer" value="0" />
			<constant name="ElementArrayBuffer" value="1" />
			<constant name="UniformBuffer" value="2" />
			<constant name="DrawIndirectBuffer" value="3" />
		</enum>

		<enum name="buffer_mapping_flags">
			<constant name="MapReadBit" value="1" />
			<constant name="MapWriteBit" value="2" />
			<constant name="MapPersistentBit" value="4" />
			<constant name="MapCoherentBit" value="8" />
            <constant name="MapDynamicStorageBit" value="16" />
		</enum>

		<enum name="mapping_access">
			<constant name="ReadOnly" value="1" />
			<constant name="WriteOnly" value="2" />
			<constant name="ReadWrite" value="3" />
		</enum>

		<enum name="render_buffer_bit">
			<constant name="DepthBufferBit" value="1" />
			<constant name="StencilBufferBit" value="2" />
			<constant name="ColorBufferBit" value="4" />
		</enum>

		<enum name="shader_language">
			<constant name="ShaderLanguageGlsl" value="0" />
            <constant name="ShaderLanguageEglsl" value="1" />
			<constant name="ShaderLanguageSpirV" value="2" />
            <constant name="ShaderLanguageHlsl" value="3" />
            <constant name="ShaderLanguageBinary" value="4" />
		</enum>
        
        <enum name="field_type">
            <constant name="Float" value="0" />
            <constant name="HalfFloat" value="1" />
            <constant name="Double" value="2" />
            <constant name="Fixed" value="3" />
            
            <constant name="Byte" value="4" />
            <constant name="UnsignedByte" value="5" />
            <constant name="Short" value="6" />
            <constant name="UnsignedShort" value="7" />
            <constant name="Int" value="8" />
            <constant name="UnsignedInt" value="9" />
        </enum>
    </constants>
    
    <globals>
        <function name="getPlatforms" cname="GetPlatforms" returnType="error" category="platform">
            <arg name="numplatforms" type="size" />
            <arg name="platforms" type="platform**" />
            <arg name="ret_numplatforms" type="size*" />
        </function>
    </globals>
    
    <interfaces>
        <interface name="platform">
            <method name="openDevice" cname="OpenDevice" returnType="device*">
                <arg name="openInfo" type="device_open_info*" />
            </method>

        </interface>
        
        <interface name="device">
            <method name="addReference" cname="AddDeviceReference" returnType="error">
            </method>

            <method name="release" cname="ReleaseDevice" returnType="error">
            </method>

            <method name="getImmediateContext" cname="GetImmediateContext" returnType="context*">
            </method>

            <method name="createDeferredContext" cname="CreateDeferredContext" returnType="context*">
            </method>

            <method name="swapBuffers" cname="SwapBuffers" returnType="error">
            </method>

            <method name="createBuffer" cname="CreateBuffer" returnType="buffer*">
                <arg name="description" type="buffer_description*" />
                <arg name="initial_data" type="pointer" />
            </method>

            <method name="createVertexBinding" cname="CreateVertexBinding" returnType="vertex_binding*">
            </method>
            
            <method name="createShader" cname="CreateShader" returnType="shader*">
                <arg name="type" type="shader_type" />
            </method>
            
            <method name="createProgram" cname="CreateProgram" returnType="program*">
            </method>
            
        </interface>
        
        <interface name="context">
            <method name="addReference" cname="AddContextReference" returnType="error">
            </method>

            <method name="release" cname="ReleaseContext" returnType="error">
            </method>

            <method name="finish" cname="Finish" returnType="error">
            </method>

            <method name="flush" cname="Flush" returnType="error">
            </method>

            <method name="makeCurrent" cname="MakeCurrent" returnType="error">
            </method>

            <method name="setClearColor" cname="SetClearColor" returnType="error">
                <arg name="r" type="float" />
                <arg name="g" type="float" />
                <arg name="b" type="float" />
                <arg name="a" type="float" />
            </method>

            <method name="setClearDepth" cname="SetClearDepth" returnType="error">
                <arg name="depth" type="float" />
            </method>

            <method name="setClearStencil" cname="SetClearStencil" returnType="error">
                <arg name="value" type="int" />
            </method>

            <method name="clear" cname="Clear" returnType="error">
                <arg name="buffers" type="bitfield" />
            </method>

            <method name="setDepthFunction" cname="SetDepthFunction" returnType="error">
                <arg name="function" type="compare_function" />
            </method>

            <method name="setAlphaFunction" cname="SetAlphaFunction" returnType="error">
                <arg name="function" type="compare_function" />
                <arg name="reference" type="float" />
            </method>
            
            <method name="useProgram" cname="UseProgram" returnType="error">
                <arg name="program" type="program*" />
            </method>

            <method name="useVertexBinding" cname="UseVertexBinding" returnType="error">
                <arg name="vertex_binding" type="vertex_binding*" />
            </method>

            <method name="useIndexBuffer" cname="UseIndexBuffer" returnType="error">
                <arg name="index_buffer" type="buffer*" />
            </method>

            <method name="useDrawBuffer" cname="UseDrawBuffer" returnType="error">
                <arg name="draw_buffer" type="buffer*" />
            </method>
            
            <method name="drawElementsIndirect" cname="DrawElementsIndirect" returnType="error">
                <arg name="mode" type="primitive_mode" />
                <arg name="offset" type="size" />
            </method>

            <method name="multiDrawElementsIndirect" cname="MultiDrawElementsIndirect" returnType="error">
                <arg name="mode" type="primitive_mode" />
                <arg name="offset" type="size" />
                <arg name="drawcount" type="size" />
            </method>

            <method name="uploadBufferData" cname="UploadBufferData" returnType="error">
                <arg name="buffer" type="buffer*" />
                <arg name="offset" type="size" />
                <arg name="size" type="size" />
                <arg name="data" type="pointer"/>
            </method>

            <method name="setUniform1i" cname="SetUniformi" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="int*"/>
            </method>
            
            <method name="setUniform2i" cname="SetUniform2i" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="int*"/>
            </method>

            <method name="setUniform3i" cname="SetUniform3i" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="int*"/>
            </method>
            
            <method name="setUniform4i" cname="SetUniform4i" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="int*"/>
            </method>
            
            <method name="setUniform1f" cname="SetUniformf" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="float*"/>
            </method>
            
            <method name="setUniform2f" cname="SetUniform2f" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="float*"/>
            </method>

            <method name="setUniform3f" cname="SetUniform3f" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="float*"/>
            </method>
            
            <method name="setUniform4f" cname="SetUniform4f" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="data" type="float*"/>
            </method>

            <method name="setUniformMatrix2f" cname="SetUniformMatrix2f" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="transpose" type="bool" />
                <arg name="data" type="float*"/>
            </method>

            <method name="setUniformMatrix3f" cname="SetUniformMatrix3f" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="transpose" type="bool" />
                <arg name="data" type="float*"/>
            </method>

            <method name="setUniformMatrix4f" cname="SetUniformMatrix4f" returnType="error">
                <arg name="location" type="int" />
                <arg name="count" type="size" />
                <arg name="transpose" type="bool" />
                <arg name="data" type="float*"/>
            </method>

        </interface>
        
        <interface name="texture">
        </interface>

        <interface name="buffer">
            <method name="addReference" cname="AddBufferReference" returnType="error">
            </method>

            <method name="release" cname="ReleaseBuffer" returnType="error">
            </method>
            
            <method name="mapBuffer" cname="MapBuffer" returnType="pointer">
                <arg name="flags" type="mapping_access"/>
            </method>

            <method name="unmapBuffer" cname="UnmapBuffer" returnType="error">
            </method>
        </interface>
        
        <interface name="vertex_binding">
            <method name="addReference" cname="AddVertexBindingReference" returnType="error">
            </method>

            <method name="release" cname="ReleaseVertexBinding" returnType="error">
            </method>
            
            <method name="addVertexBufferBindings" cname="AddVertexBufferBindings" returnType="error">
                <arg name="vertex_buffer" type="buffer*" />
                <arg name="attribute_count" type="size" />
                <arg name="attributes" type="vertex_attrib_description*" />
            </method>

        </interface>
        
        <interface name="shader">
            <method name="addReference" cname="AddShaderReference" returnType="error">
            </method>

            <method name="release" cname="ReleaseShader" returnType="error">
            </method>
            
            <method name="setShaderSource" cname="SetShaderSource" returnType="error">
                <arg name="language" type="shader_language" />
                <arg name="sourceText" type="string" />
                <arg name="sourceTextLength" type="string_length" />
            </method>
            
            <method name="compileShader" cname="CompileShader" returnType="error">
                <arg name="options" type="cstring" />
            </method>

            <method name="getCompilationLogLength" cname="GetShaderCompilationLogLength" returnType="size">
            </method>
            
            <method name="getCompilationLog" cname="GetShaderCompilationLog" returnType="error">
                <arg name="buffer_size" type="size" />
                <arg name="buffer" type="string_buffer" />
            </method>
        </interface>

        <interface name="program">
            <method name="addReference" cname="AddProgramReference" returnType="error">
            </method>

            <method name="release" cname="ReleaseProgram" returnType="error">
            </method>
            
            <method name="attachShader" cname="AttachShader" returnType="error">
                <arg name="shader" type="shader*" />
            </method>
            
            <method name="linkProgram" cname="LinkProgram" returnType="error">
            </method>

            <method name="getLinkingLogLength" cname="GetProgramLinkingLogLength" returnType="size">
            </method>
            
            <method name="getLinkingLog" cname="GetProgramLinkingLog" returnType="error">
                <arg name="buffer_size" type="size" />
                <arg name="buffer" type="string_buffer" />
            </method>
            
            <method name="bindAttributeLocation" cname="BindAttributeLocation" returnType="error">
                <arg name="name" type="cstring" />
                <arg name="location" type="int" />
            </method>
            
            <method name="getUniformLocation" cname="GetUniformLocation" returnType="int">
                <arg name="name" type="cstring" />
            </method>
        </interface>

        <interface name="framebuffer">
        </interface>
    </interfaces>
</version>

</api>
